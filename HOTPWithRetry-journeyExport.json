{
  "meta": {
    "origin": "https://XXX/platform/?realm=alpha#/journeys/HOTPWithRetry",
    "exportedBy": "ps@pingidentity.com",
    "exportDate": "2024-08-09T11:14:56.865Z",
    "exportTool": "platform-admin ui tree export",
    "exportToolVersion": "1.0",
    "treesSelectedForExport": [
      "HOTPWithRetry"
    ],
    "innerTreesIncluded": []
  },
  "trees": {
    "HOTPWithRetry": {
      "tree": {
        "_id": "HOTPWithRetry",
        "_rev": "-1718089861",
        "identityResource": "managed/alpha_user",
        "uiConfig": {
          "categories": "[\"Authentication\"]"
        },
        "entryNodeId": "a9b46ec1-83a9-4026-b2b5-cbd4cdbd6115",
        "innerTreeOnly": false,
        "nodes": {
          "1fec2a30-2b6b-4d07-92a8-00e43a61e5e6": {
            "x": 989,
            "y": 858,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "a9b46ec1-83a9-4026-b2b5-cbd4cdbd6115"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Resend If User Selected/Invalid"
          },
          "500f0cfc-72a1-4084-9d94-2f25a7aa5de1": {
            "x": 984,
            "y": 516,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a"
            },
            "nodeType": "MessageNode",
            "displayName": "OTP Success Message Node"
          },
          "6e2e38ce-2da7-41e6-8ab6-1a01edea3504": {
            "x": 652,
            "y": 440.75,
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "OTP_Blank": "bb4bb15a-9d45-4eb1-a52d-f1a2e149e35f",
              "OTP_Expired": "c7e3dcd6-8b5b-4af1-b67e-9d7c8256c807",
              "OTP_Invalid": "b3b3db65-73d6-4618-b755-8757f10911d3",
              "OTP_Resend": "1fec2a30-2b6b-4d07-92a8-00e43a61e5e6",
              "OTP_Validated": "500f0cfc-72a1-4084-9d94-2f25a7aa5de1"
            },
            "nodeType": "PageNode",
            "displayName": "OTP Page Node"
          },
          "a9b46ec1-83a9-4026-b2b5-cbd4cdbd6115": {
            "x": 174,
            "y": 493.5,
            "connections": {
              "outcome": "cfdb0928-911b-435f-8916-61487d87e830"
            },
            "nodeType": "OneTimePasswordGeneratorNode",
            "displayName": "HOTP Generator"
          },
          "b3b3db65-73d6-4618-b755-8757f10911d3": {
            "x": 985,
            "y": 663,
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1fec2a30-2b6b-4d07-92a8-00e43a61e5e6"
            },
            "nodeType": "MessageNode",
            "displayName": "OTP Invalid Message Node"
          },
          "bb4bb15a-9d45-4eb1-a52d-f1a2e149e35f": {
            "x": 987,
            "y": 193,
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "6e2e38ce-2da7-41e6-8ab6-1a01edea3504"
            },
            "nodeType": "RetryLimitDecisionNode",
            "displayName": "Retry If OTP Blank"
          },
          "c7e3dcd6-8b5b-4af1-b67e-9d7c8256c807": {
            "x": 982,
            "y": 375,
            "connections": {},
            "nodeType": "MessageNode",
            "displayName": "OTP Expired Message Node"
          },
          "cfdb0928-911b-435f-8916-61487d87e830": {
            "x": 407,
            "y": 485.5,
            "connections": {
              "true": "6e2e38ce-2da7-41e6-8ab6-1a01edea3504"
            },
            "nodeType": "PageNode",
            "displayName": "Display OTP"
          }
        },
        "staticNodes": {
          "startNode": {
            "x": 70,
            "y": 560
          },
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1615,
            "y": 756
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1615,
            "y": 625
          }
        },
        "description": "Example HOTP Journey with retry capability",
        "enabled": true
      },
      "nodes": {
        "1fec2a30-2b6b-4d07-92a8-00e43a61e5e6": {
          "_id": "1fec2a30-2b6b-4d07-92a8-00e43a61e5e6",
          "_rev": "-511648240",
          "incrementUserAttributeOnFailure": false,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "500f0cfc-72a1-4084-9d94-2f25a7aa5de1": {
          "_id": "500f0cfc-72a1-4084-9d94-2f25a7aa5de1",
          "_rev": "204124530",
          "messageYes": {},
          "message": {
            "en": "Successfully verified OTP!"
          },
          "messageNo": {},
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "6e2e38ce-2da7-41e6-8ab6-1a01edea3504": {
          "_id": "6e2e38ce-2da7-41e6-8ab6-1a01edea3504",
          "_rev": "-237042289",
          "nodes": [
            {
              "_id": "749787c8-f43e-4aef-9761-3c5a99a83580",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Collect OTP and Choice"
            }
          ],
          "stage": "OTP_Decision",
          "pageDescription": {},
          "pageHeader": {
            "en": "Verify or Retry OTP"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "OTP_Blank",
              "displayName": "OTP_Blank"
            },
            {
              "id": "OTP_Expired",
              "displayName": "OTP_Expired"
            },
            {
              "id": "OTP_Validated",
              "displayName": "OTP_Validated"
            },
            {
              "id": "OTP_Invalid",
              "displayName": "OTP_Invalid"
            },
            {
              "id": "Error",
              "displayName": "Error"
            },
            {
              "id": "OTP_Resend",
              "displayName": "OTP_Resend"
            }
          ]
        },
        "a9b46ec1-83a9-4026-b2b5-cbd4cdbd6115": {
          "_id": "a9b46ec1-83a9-4026-b2b5-cbd4cdbd6115",
          "_rev": "-880055831",
          "length": 8,
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "name": "HOTP Generator",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "outcome",
              "displayName": "Outcome"
            }
          ]
        },
        "b3b3db65-73d6-4618-b755-8757f10911d3": {
          "_id": "b3b3db65-73d6-4618-b755-8757f10911d3",
          "_rev": "-2058805293",
          "messageYes": {
            "en": "Yes"
          },
          "message": {
            "en": "OTP Invalid. Send again?"
          },
          "messageNo": {
            "en": "No"
          },
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "bb4bb15a-9d45-4eb1-a52d-f1a2e149e35f": {
          "_id": "bb4bb15a-9d45-4eb1-a52d-f1a2e149e35f",
          "_rev": "-1117136294",
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "name": "Retry Limit Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "Retry",
              "displayName": "Retry"
            },
            {
              "id": "Reject",
              "displayName": "Reject"
            }
          ]
        },
        "c7e3dcd6-8b5b-4af1-b67e-9d7c8256c807": {
          "_id": "c7e3dcd6-8b5b-4af1-b67e-9d7c8256c807",
          "_rev": "-1737196910",
          "messageYes": {},
          "message": {
            "en": "Expired"
          },
          "messageNo": {},
          "_type": {
            "_id": "MessageNode",
            "name": "Message Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "True"
            },
            {
              "id": "false",
              "displayName": "False"
            }
          ]
        },
        "cfdb0928-911b-435f-8916-61487d87e830": {
          "_id": "cfdb0928-911b-435f-8916-61487d87e830",
          "_rev": "-1322026027",
          "nodes": [
            {
              "_id": "50550d20-f0a7-406e-9001-acaf8a53ba52",
              "nodeType": "ScriptedDecisionNode",
              "displayName": "Display OTP"
            }
          ],
          "stage": "{\"submitButtonText\":{\"en\":\"Next\"}}",
          "pageDescription": {
            "en": "Sample node to display the OTP value rather than retrieving via email. FOR TESTING PURPOSES ONLY"
          },
          "pageHeader": {
            "en": "Display OTP Value"
          },
          "_type": {
            "_id": "PageNode",
            "name": "Page Node",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "innerNodes": {
        "749787c8-f43e-4aef-9761-3c5a99a83580": {
          "_id": "749787c8-f43e-4aef-9761-3c5a99a83580",
          "_rev": "1272616263",
          "script": "205fe5e5-fd39-47bb-ab18-f97ff76a9e3e",
          "outcomes": [
            "OTP_Blank",
            "OTP_Expired",
            "OTP_Validated",
            "OTP_Invalid",
            "Error",
            "OTP_Resend"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "OTP_Blank",
              "displayName": "OTP_Blank"
            },
            {
              "id": "OTP_Expired",
              "displayName": "OTP_Expired"
            },
            {
              "id": "OTP_Validated",
              "displayName": "OTP_Validated"
            },
            {
              "id": "OTP_Invalid",
              "displayName": "OTP_Invalid"
            },
            {
              "id": "Error",
              "displayName": "Error"
            },
            {
              "id": "OTP_Resend",
              "displayName": "OTP_Resend"
            }
          ]
        },
        "50550d20-f0a7-406e-9001-acaf8a53ba52": {
          "_id": "50550d20-f0a7-406e-9001-acaf8a53ba52",
          "_rev": "-74836964",
          "script": "1d3acf97-01ea-4e31-ab26-02cd42fa0169",
          "outcomes": [
            "true"
          ],
          "outputs": [
            "*"
          ],
          "inputs": [
            "*"
          ],
          "_type": {
            "_id": "ScriptedDecisionNode",
            "name": "Scripted Decision",
            "collection": true
          },
          "_outcomes": [
            {
              "id": "true",
              "displayName": "true"
            }
          ]
        }
      },
      "scripts": {
        "205fe5e5-fd39-47bb-ab18-f97ff76a9e3e": {
          "_id": "205fe5e5-fd39-47bb-ab18-f97ff76a9e3e",
          "name": "ds-otp-choice",
          "description": null,
          "script": "\"// Example script to verify or resend OTP\\n\\n/**\\n * Script configuration\\n*/\\n\\n// Initialise the ds-node-logger-lib library script\\nXLogger = require(\\\"ds-node-logger-lib\\\").XLogger;\\nlogger = new XLogger(this);\\n\\nvar config = {\\n    /**\\n     * @property {string} otpValidity - OTP validity period in minutes\\n     * @property {string} otpExpiredError - Error message to add to sharedSate if the OTP is expired\\n     * @property {string} otpNotMatchError - Error message to add to sharedSate if the OTP does not match\\n     * @property {string} otpNodeError - Catch all error message to add to sharedState if the node encounters an unexpected error\\n     */\\n    otpValidity: 5,\\n    otpExpiredError: \\\"OTP has expired\\\",\\n    otpNotMatchError: \\\"OTP does not match\\\",\\n    otpNodeError: \\\"Node configuration error\\\"\\n};\\n\\n/**\\n * Node outcomes\\n*/\\nvar nodeOutcome = {\\n    SUCCESS: \\\"OTP_Validated\\\",\\n    BLANK: \\\"OTP_Blank\\\",\\n    EXPIRED: \\\"OTP_Expired\\\",\\n    INVALID: \\\"OTP_Invalid\\\",\\n    RESEND: \\\"OTP_Resend\\\",\\n    ERROR: \\\"Error\\\"\\n};\\n\\n/**\\n * Function to compare the timestamps between the OTP entered by the user and the OTP generation timestamp against the validity period defined by this node\\n * Returns boolean true if within validity or false if not\\n */\\nfunction isValid(epochSeconds) {\\n    logger.debug(\\\"OTP timestamp from nodeState is: \\\" + epochSeconds);\\n    var now = Math.floor(Date.now() / 1000);\\n    logger.debug(\\\"Now timestamp is: \\\" + now);\\n    var validityPeriod = config.otpValidity * 60;\\n    var difference = Math.abs(now - epochSeconds);\\n    logger.debug(\\\"Time difference is: \\\" + difference + \\\" seconds\\\");\\n    return difference <= validityPeriod;\\n}\\n\\n/**\\n * Main function\\n */\\n\\n(function () {\\n    try {\\n        if (callbacks.isEmpty()) {\\n            callbacksBuilder.textInputCallback(\\\"Enter OTP\\\", \\\"Enter OTP\\\");\\n            callbacksBuilder.choiceCallback('Option', ['Verify OTP', 'Re-send OTP'], 0, false);\\n        } else {\\n            var selection = callbacks.getChoiceCallbacks().get(0)[0];\\n            logger.debug(\\\"selection = \\\" + selection);\\n\\n            //If array value is 0 then verify OTP\\n            if (selection.toString() == \\\"0\\\") {\\n                \\n                //Check if OTP is blank  \\n                var userOtp = callbacks.getTextInputCallbacks().get(0);\\n                userOtp = userOtp.trim();\\n                if (userOtp.length === 0) {\\n                    logger.error(\\\"OTP is blank \\\");\\n                    action.goTo(nodeOutcome.BLANK);\\n                    return;\\n                }\\n\\n                //Check if OTP has Expired\\n                var otpTimestamp = nodeState.get(\\\"oneTimePasswordTimestamp\\\");\\n                result = isValid(otpTimestamp);\\n                logger.debug(\\\"Is OTP valid result: \\\" + result);\\n\\n                if (!result) {\\n                    logger.error(\\\"OTP expired.\\\");\\n                    action.goTo(nodeOutcome.EXPIRED).withErrorMessage(config.otpExpiredError);\\n                    return;\\n                }\\n\\n                //Check if OTP is valid\\n                var systemOtp = nodeState.get(\\\"oneTimePassword\\\");\\n\\n                if (userOtp !== systemOtp) {\\n                    logger.error(\\\"OTP validation failed. OTPs do not match.\\\");\\n                    action.goTo(nodeOutcome.INVALID).withErrorMessage(config.otpNotMatchError);\\n                    return;\\n                } else {\\n                    action.goTo(nodeOutcome.SUCCESS);\\n                    return;\\n                }\\n\\n            }\\n\\n            //If array value is 1 then resend OTP\\n            if (selection.toString() == \\\"1\\\") {\\n                logger.error(\\\"User selected re-send OTP option.\\\");\\n                action.goTo(nodeOutcome.RESEND);\\n                return;\\n            }\\n\\n            //If all else fails Error\\n            action.goTo(nodeOutcome.ERROR).withErrorMessage(config.otpNodeError);\\n        }\\n    } catch (e) {\\n        logger.error(\\\"Exception \\\" + e);\\n        logger.debug(\\\"Stack trace \\\" + e.stack);\\n    }\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        },
        "1d3acf97-01ea-4e31-ab26-02cd42fa0169": {
          "_id": "1d3acf97-01ea-4e31-ab26-02cd42fa0169",
          "name": "ds-get-otp",
          "description": null,
          "script": "\"/*\\nTHIS NODE IS FOR SAMPLE AND TESTING PURPOSES ONLY. \\nFOR CUSTOMER FACING USE CASES ENSURE OTPs ARE DELIVERED USING STANDARD CHANNELS SUCH AS EMAIL, SMS, ETC.\\n*/\\n\\n//Node to display the OTP as text for easier testing\\n\\n(function () {\\n  if (callbacks.isEmpty()) {\\n    callbacksBuilder.textOutputCallback(0, nodeState.get(\\\"oneTimePassword\\\"));\\n  }    \\n  action.goTo('true');\\n})();\"",
          "default": false,
          "language": "JAVASCRIPT",
          "context": "AUTHENTICATION_TREE_DECISION_NODE",
          "createdBy": "null",
          "creationDate": 0,
          "lastModifiedBy": "null",
          "lastModifiedDate": 0,
          "evaluatorVersion": "2.0"
        }
      },
      "emailTemplates": {},
      "socialIdentityProviders": {},
      "themes": [],
      "saml2Entities": {},
      "circlesOfTrust": {}
    }
  }
}